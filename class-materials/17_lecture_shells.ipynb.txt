{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Shells"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Start course `Binder` image and select `new terminal` (dropdown top left)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What is a \"shell?\"\n",
    "\n",
    "Interactive \"prompt\" not unlike `Jupyter` (or `R`)!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "type `echo $0`"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The default `shell` for our Binder terminal is [sh](https://en.wikipedia.org/wiki/Bourne_shell)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's use `bash` instead`.\n",
    "\n",
    "type `bash` and hit `<enter>`."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What does \"BASH\" stand for?\n",
    "\n",
    "- **B**ourne **A**gain **Sh**ell"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What can you do in a shell?\n",
    "\n",
    "- navigate the filesystem (`cd`)\n",
    "- run programs (e.g. `echo`, `docker`, `jupyter`)\n",
    "- create, rearrange, delete files/directories/etc. (e.g. `mkdir`, `mv`, `cp`)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Launching a shell example."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What about Windows?\n",
    "- [Powershell](https://docs.microsoft.com/en-us/powershell/)\n",
    "- [Git for Windows](https://gitforwindows.org)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Docker"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Docker allows us to use pre-configured \"images\" of otherwise difficult to configure and install software.\n",
    "\n",
    "(It also let's us share our otherwise difficult to configure and install personal environment.)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[https://github.com/jupyter/docker-stacks](https://github.com/jupyter/docker-stacks)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[https://github.com/rocker-org/rocker](https://github.com/rocker-org/rocker)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's look inside one `Dockerfile`."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "But where is the \"image?\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Dockerhub"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[https://hub.docker.com/u/jupyter](https://hub.docker.com/u/jupyter)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Binder workflow:\n",
    "\n",
    "1. Check if _current_ image is available.\n",
    "1. If not, download repo (i.e. `git clone`) and `build` image, otherwise `pull`.\n",
    "1. `run` \"container\" from image"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Runinng Docker locally"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Installing Docker"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Two components: CLI and background service"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Windows\n",
    "  - [https://docs.docker.com/docker-for-windows/install/](https://docs.docker.com/docker-for-windows/install/)\n",
    "- MacOS\n",
    "  - [https://docs.docker.com/docker-for-mac/install/](https://docs.docker.com/docker-for-mac/install/)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "R",
   "language": "R",
   "name": "ir"
  },
  "language_info": {
   "codemirror_mode": "r",
   "file_extension": ".r",
   "mimetype": "text/x-r-source",
   "name": "R",
   "pygments_lexer": "r",
   "version": "3.6.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
